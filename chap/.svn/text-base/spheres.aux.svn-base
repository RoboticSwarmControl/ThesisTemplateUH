\relax 
\citation{Brockett1999,Khaneja2000,Li2006,Li2006b,Li2006a,Li2007,Li2009,Li2011,Ruths2011,Ruths2011a,Beauchard2010,Beauchard2010a}
\citation{Erdmann1988}
\citation{Sussmann1972}
\citation{Lafferriere1993}
\@writefile{toc}{\contentsline {chapter}{CHAPTER\ 4\hskip 1em\relax \MakeUppercase  {Case Study 2: \\ Approximate Steering of Ball-Plate System}}{84}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chap-spheres}{{4}{84}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.1}{\ignorespaces  This chapter investigates paths constructed so that a sphere rolling along them will experience a desired net rotation with low error, despite variations in sphere radius. An example problem is to rotate spheres with radius $r \in [0.5,1.5]$ by $\pi $ about their $y$-axis.\relax }}{84}}
\newlabel{fig:SphereStartEnd}{{4.1}{84}}
\@writefile{toc}{\contentsline {section}{\numberline {4.1}Problem Statement}{84}}
\newlabel{sec:ProblemStatement}{{4.1}{84}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.2}{\ignorespaces  A sphere rolling on the plane with unknown perturbation that scales the radius. This chapter models such a sphere as an ensemble control system, proves that it is controllable, and derives a motion planning algorithm that steers the sphere to within an arbitrarily small neighborhood of any desired rotation in SO(3).\relax }}{85}}
\newlabel{fig:SphereEnsCont}{{4.2}{85}}
\newlabel{eqn:EnsSphereSys}{{4.1}{85}}
\citation{Eschmann1985}
\citation{Energy2010}
\citation{Bain1958}
\citation{Alagarswami1974}
\citation{Brockett1993}
\citation{Jurdjevic1993}
\citation{Li1990}
\citation{Marigo2000}
\citation{Oriolo2005}
\citation{Marigo2000,Bicchi1995,Bicchi1995a}
\citation{Choudhury2001}
\citation{Date2004,Morin2008,Casagrande2009}
\newlabel{eqn:Jtrace1}{{4.2}{86}}
\@writefile{toc}{\contentsline {section}{\numberline {4.2}Related Work}{86}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.1} Sphere Manipulation}{86}}
\citation{Svinin2008,Svinin2008a}
\citation{Montana1988,Bicchi1995a,Marigo2000,Murray1994,Nakamura1997}
\citation{Li2006,Li2006a,Li2006b,Li2007,Li2011}
\citation{Li2006,Li2009}
\citation{Li2006}
\citation{Beauchard2010}
\citation{Beauchard2010a}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.2}Ensemble Control of Bloch Equations}{87}}
\citation{Jurdjevic1993,Casagrande2009,Date2004,Svinin2008}
\citation{Choudhury2001}
\citation{Wilding1976,congreveClock}
\citation{Jerzy1996,Klamka2000}
\citation{Klamka2000}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.3}Sphere Controllability with Input Constraints}{88}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.3}{\ignorespaces A Congreve clock, from http://www.modelworks-int.com. The steel ball rolling along the inclined path substitutes for a pendulum as the primary timekeeper. Once the ball strikes a detent at either end of the path, the tray tilts and the ball reverses down the path.\relax }}{89}}
\newlabel{fig:CongreveClock}{{4.3}{89}}
\@writefile{toc}{\contentsline {section}{\numberline {4.3}Analysis of Controllability}{89}}
\newlabel{sec:AnalysisOfControllability}{{4.3}{89}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.1}One Sphere}{89}}
\citation{Li2006,Li2006a,Li2006b,Li2007,Li2011,Becker2010}
\newlabel{eqn:OneSphereSys}{{4.3}{90}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.2}Ensemble Control of Spheres}{90}}
\newlabel{eqn:EnsSphereSys}{{4.4}{90}}
\newlabel{fig:9sphereSim}{{\caption@xref {fig:9sphereSim}{ on input line 203}}{91}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.4}{\ignorespaces  Left to right, top to bottom: nine spheres, with radius $[0.5,\ldots  ,1.5]$ roll down identical grooves, shown in cyan. All spheres finish with a net rotation of $\approx \pi $ about their $y$-axis. This rotation is reversible. By tilting the tray back up, the spheres return to their original position and orientation.\relax }}{91}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.3}Non-negative control of a single sphere}{93}}
\newlabel{eq:RotationMatrixFromXYX}{{4.5}{94}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces Rolling A Single Sphere\relax }}{94}}
\newlabel{alg:Roll1sphere}{{1}{94}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {2}{\ignorespaces Rolling A Single Sphere: Positive Inputs\relax }}{94}}
\newlabel{alg:Roll1spherePos}{{2}{94}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.4}The problem of non-commutativity}{94}}
\citation{Pryor2007,Pryor2007a}
\@writefile{lof}{\contentsline {figure}{\numberline {4.5}{\ignorespaces  Both the red and blue paths implement the total rotation $R_x(-\frac  {\pi }{4})R_y(-\frac  {3\pi }{4})R_z(\frac  {2\pi }{3})$. The red path, which implements the rule , is more than twice as long as the blue path, but is nonnegative.\relax }}{95}}
\newlabel{EquivalentRollingPaths}{{4.5}{95}}
\newlabel{alg:Roll1spherePos}{{4.5}{95}}
\@writefile{toc}{\contentsline {section}{\numberline {4.4}Approximate Steering Algorithm}{95}}
\newlabel{sec:ApproxSteeringAlg}{{4.4}{95}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.1}Primitives with Piecewise-Constant Inputs}{95}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.6}{\ignorespaces  A sample primitive of the form \textup  {\hbox {\mathsurround \z@ \normalfont  (\ignorespaces 2.4\hbox {}\unskip \@@italiccorr )}}, with $\beta _k = \pi /3$ and $\phi k = \pi /2$. A sphere following this path generates to first order the rotation $\approx \beta _k \frac  {1}{\epsilon } \qopname  \relax o{cos}(\phi k \frac  {1}{\epsilon })$. By subdividing the rotation as illustrated on the right, we can improve arbitrarily this approximation, at the cost of a longer path.\relax }}{96}}
\newlabel{fig:PryorsPrim1}{{4.6}{96}}
\newlabel{eq:PWSpherePrim}{{4.6}{96}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.2}Achieving Error of a Particular Order}{97}}
\newlabel{sec:UnicycleErrorOfParticularOrder}{{4.4.2}{97}}
\newlabel{linearequations}{{4.7}{97}}
\citation{Becker2010}
\citation{Pryor2007}
\citation{Pryor2007}
\@writefile{lof}{\contentsline {figure}{\numberline {4.7}{\ignorespaces  A version of the piecewise-constant path primitive \textup  {\hbox {\mathsurround \z@ \normalfont  (\ignorespaces 2.4\hbox {}\unskip \@@italiccorr )}}. This primitive was introduced by Pryor \cite  {Pryor2007} and has been modified to not roll uphill. For each case $\phi = \pi /2$. In blue is the result of implementing the primitive directly. The approximation is poor for large rotations in the $-y$-axis, so we subdivide them if they are larger than a threshold value. In red is the result after using a threshold on $y$ rotation of $\pi /16$. In green is the limit as the threshold values goes to 0. Top row: with only 2 primitives, we cannot achieve the desired rotation. Middle row: with 3 primitives, we can achieve an error $< 1^{\circ }$ over $\epsilon \in [0.9,1.1]$. Bottom row: increasing the number of primitives increases the required path length. For $\epsilon \in [0.9,1.1]$ and desired error $< 1^{\circ }$, we require at least 12 primitives. \relax }}{99}}
\newlabel{fig:PryorsMatrixIdentity}{{4.7}{99}}
\@writefile{toc}{\contentsline {section}{\numberline {4.5}Optimal Control with Piecewise-Constant Inputs}{99}}
\newlabel{sec:OptimalControl}{{4.5}{99}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5.1}Performance Metric}{99}}
\citation{Huynh2009}
\newlabel{eqn:posRotations}{{4.8}{100}}
\newlabel{eqn:minSO3}{{4.9}{100}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5.2}Rotating a unit vector in $\mathbb  {R}^3$}{100}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.8}{\ignorespaces  Nine spheres, with radius $[0.5,\ldots  ,1.5]$ roll down identical grooves, shown in blue. All spheres finish with a net rotation of $\approx \pi $ about their $y$-axis.\relax }}{101}}
\newlabel{fig:9sphereSim}{{4.8}{101}}
\newlabel{eqn:minUnit}{{4.11}{101}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5.3}Gradient Descent Algorithms for Optimal Control}{101}}
\newlabel{eqn:Jacos}{{4.12}{101}}
\citation{Li2006b}
\newlabel{eqn:Jtrace}{{4.13}{102}}
\newlabel{eq:updateuv}{{4.16}{103}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {3}{\ignorespaces Sphere Rolling Path Planning: Gradient Ascent\relax }}{103}}
\newlabel{alg:gradascentSphere}{{3}{103}}
\newlabel{eq:uvproj}{{9}{104}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5.4}Simulation Results}{104}}
\newlabel{sec:SimulationResults}{{4.5.4}{104}}
\citation{Young2000}
\@writefile{lof}{\contentsline {figure}{\numberline {4.9}{\ignorespaces Constraints on motion commands investigated in this document.}}{105}}
\newlabel{fig:primitiveconstraints.pdf}{{4.9}{105}}
\@writefile{toc}{\contentsline {section}{\numberline {4.6}Hardware Implementation}{105}}
\newlabel{sec:hardware}{{4.6}{105}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.6.1}dynamics}{105}}
\newlabel{eqn:translation}{{4.17}{105}}
\newlabel{eqn:rotation}{{4.18}{105}}
\citation{Young2000}
\citation{Young2000}
\citation{CoefficientofRestitutionWeisstein}
\citation{Domenech1991}
\citation{Goldsmith2001}
\@writefile{toc}{\contentsline {subsubsection}{impacts}{106}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.6.2}Problem Geometry}{106}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.6.3}rotation about an arbitrary axis}{107}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.10}{\ignorespaces   Illustration of gradient descent procedure. The goal is a rotation by $\pi $ about the $y$-axis for a radius set of $[0.9,1.1]$. A random, 50 segment path was generated, then optimized for 60,000 iterations of algorithm \G@refundefinedtrue \text  {\normalfont  \bfseries  ??}\GenericWarning  {               }{LaTeX Warning: Reference `alg:gradascentSphere' on page 108 undefined} for no constraints on the inputs. The top image shows the final path, contrasted with the optimal path for $r=1$. The bottom left plot shows the final error in degrees from the desired rotation, and the bottom right shows the evolution of the error function \textup  {\hbox {\mathsurround \z@ \normalfont  (\ignorespaces \G@refundefinedtrue \text  {\normalfont  \bfseries  ??}\GenericWarning  {               }{LaTeX Warning: Reference `eqn:Jacos' on page 108 undefined}\unskip \@@italiccorr )}}. \relax }}{108}}
\newlabel{fig:NumericalPicRS10per.pdf}{{4.10}{108}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.11}{\ignorespaces [Simulation results for a goal rotation by $\pi $ about the $y$-axis for a radius set of $[0.5,1.5]$] Simulation results for a goal rotation by $\pi $ about the $y$-axis for a radius set of $[0.5,1.5]$. Top: four 50 segment paths found by gradient descent for different constraints on the inputs. Bottom: angular error in degrees for the paths shown above. Note that for the unconstrained case, an order of magnitude longer path reduced the maximum error by a factor of 200, while the most constrained path reduced the maximum error from $180^{\circ }$ to $8^{\circ }$ while only increasing path length by a factor of 15. \relax }}{109}}
\newlabel{fig:NumericalPic}{{4.11}{109}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.12}{\ignorespaces [Simulation results for a goal rotation by $\pi $ about the $y$-axis for a radius set of $[0.9,1.1]$] Simulation results for a goal rotation by $\pi $ about the $y$-axis for a radius set of $[0.9,1.1]$. Top: four 50 segment paths found by gradient descent for different constraints on the inputs. Bottom: angular error in degrees for the paths shown above. Note that for the unconstrained case, an order of magnitude longer path reduced the maximum error by a factor of 200, while the most constrained path reduced the maximum error from $180^{\circ }$ to $8^{\circ }$ while only increasing path length by a factor of 15.\relax }}{110}}
\newlabel{fig:NumericalPic10per}{{4.12}{110}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.13}{\ignorespaces Sphere rolling down an incline\relax }}{111}}
\newlabel{fig:InclinedPlaneBallRoll2D}{{4.13}{111}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.14}{\ignorespaces In blue, the required coefficient of friction $\mu _s$ for rolling without slipping of a solid sphere as a function of incline angle $\beta $. Also shown are $\mu _s$ for \leavevmode {\color  {red}teflon on steel: 0.04}, \leavevmode {\color  {yellow}steel on steel: 0.74}, \leavevmode {\color  {green}glass on glass: 0.94}, and the blue rectangle wood on steel:0.2-0.5 \cite  {Young2000}.\relax }}{111}}
\newlabel{fig:RequiredCoeffFriction}{{4.14}{111}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.15}{\ignorespaces Sphere rolling at an angle $\gamma $ (due to restraining groove) down an incline of slope $\beta '$. This is equivalent to the ball rolling down a ramp of angle $\beta = \qopname  \relax o{arcsin}\left (\qopname  \relax o{cos}(\beta ')\qopname  \relax o{sin}(\gamma )\right )$.\relax }}{111}}
\newlabel{fig:InclinedPlaneBallRoll2D}{{4.15}{111}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.16}{\ignorespaces Comparing using a square profile groove and a 90 degree groove. The effective radius $r_e$ of the spheres are plotted in red for a 90 degree groove and in blue for the square groove of width $w=1/2$. Note that the potential well for a 90 degree groove may be made arbitrarily large by cutting the groove deeper, but the well for a square groove must be less than the smallest ball diameter, $2r(1-\delta )$.\relax }}{112}}
\newlabel{fig:RadiusSizePicSqVs90}{{4.16}{112}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.17}{\ignorespaces   By varying the miter of the groove cut into the plane, we can generate velocity about the $z$-axis. in the sketch above, if the center, symmetric groove generates $\qopname  \relax o{exp}{\left \{\Omega _x\right \}}$, then the left groove, which is tilted by $\phi $ generates the rotation $\qopname  \relax o{exp}\left \{\qopname  \relax o{cos}(\phi )\Omega _x + \qopname  \relax o{sin}(\phi )\Omega _z\right \}$ and the right groove $\qopname  \relax o{exp}\left \{\qopname  \relax o{cos}(\phi )\Omega _x - \qopname  \relax o{sin}(\phi )\Omega _z\right \}$. To prevent the ball from rolling out of the groove, $\phi $ is limited to $\pm \frac  {\pi }{6}$. Now the total range of rotation inputs, where $\psi $ is the angle from $x$ along the groove, is $\qopname  \relax o{exp}\left \{ \qopname  \relax o{cos}(\phi ) \left ( \qopname  \relax o{cos}(\psi )\Omega _x + \qopname  \relax o{sin}(\psi )\Omega _y \right ) + \qopname  \relax o{sin}(\phi ) \Omega _z \right \} .$ Sadly, the path of the centroid of the ball is no longer uniform as a function of $\epsilon $. This causes spheres of differing sizes follow different paths, complicating analysis. \relax }}{113}}
\newlabel{fig:grooveProfilesZturn}{{4.17}{113}}
\@setckpt{chap/spheres}{
\setcounter{page}{114}
\setcounter{equation}{20}
\setcounter{enumi}{2}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{0}
\setcounter{mpfootnote}{0}
\setcounter{part}{0}
\setcounter{chapter}{4}
\setcounter{section}{6}
\setcounter{subsection}{3}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{17}
\setcounter{table}{0}
\setcounter{parentequation}{0}
\setcounter{KVtest}{1}
\setcounter{subfigure}{0}
\setcounter{subfigure@save}{3}
\setcounter{lofdepth}{1}
\setcounter{subtable}{0}
\setcounter{subtable@save}{0}
\setcounter{lotdepth}{1}
\setcounter{ALC@unique}{47}
\setcounter{ALC@line}{10}
\setcounter{ALC@rem}{10}
\setcounter{ALC@depth}{0}
\setcounter{float@type}{8}
\setcounter{algorithm}{3}
\setcounter{theorem}{5}
\setcounter{ContinuedFloat}{0}
}
